println "NGI Version number: " + version

buildscript {
    ext { springBootVersion = '1.3.2.RELEASE' }
    repositories {
        mavenLocal()
        maven { url "${artifactory_contextUrl}" + "/repo" }
    }
    dependencies {
        classpath('io.spring.gradle:dependency-management-plugin:0.5.4.RELEASE')
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '4.0.0')
    }
}


allprojects {
    task hello << {task -> println "project: $task.project.name"}
    group = 'com.ideas.ngi'
    status = 'release'
    apply plugin: 'java'
    apply plugin: 'idea'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

subprojects {
    hello << {println "- I depend on ngi"}
    apply plugin: 'com.jfrog.artifactory'
    apply plugin: 'maven-publish'
    apply plugin: 'spring-boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'

    bootRun {
        jvmArgs = ["-Dcom.sun.management.jmxremote.port=9797", "-Dcom.sun.management.jmxremote.authenticate=false",
                   "-Dcom.sun.management.jmxremote.ssl=false", "-Dvaadin.touchkit.developer.license=a30026ad-1c0d-43e0-8c23-986dab60acd0",
                   "-Dvaadin.charts.developer.license=d1cdd710-69d2-4624-929c-39e57342e215"]
    }



    dependencies {

        // Spring
        compile('com.vaadin:vaadin-spring-boot-starter:1.0.0')
        compile("org.springframework.boot:spring-boot-starter-data-rest")
        compile("org.springframework.boot:spring-boot-starter-web")
        compile("org.springframework.boot:spring-boot-starter-actuator")
        compile("org.springframework.boot:spring-boot-starter-integration:1.2.5.RELEASE")
        compile 'org.springframework.integration:spring-integration-java-dsl:1.0.2.RELEASE'
        compile 'org.springframework.boot:spring-boot-starter-actuator:1.2.7.RELEASE'

        //Mongo
        compile 'org.mongodb:mongo-java-driver:3.2.2'
        compile("org.springframework.boot:spring-boot-starter-data-mongodb")

        //Commmon
        compile 'org.apache.commons:commons-collections4:4.0'
        compile 'org.apache.commons:commons-csv:1.1'
        compile 'commons-beanutils:commons-beanutils:1.9.2'
        compile 'org.apache.commons:commons-lang3:3.0'
        compile 'org.jsoup:jsoup:1.8.3'
        compile 'com.google.apis:google-api-services-customsearch:v1-rev46-1.20.0'

        // R dependancy
        compile 'org.nuiton.thirdparty:JRI:0.9-6'

        //Test dependancy
        testCompile("org.testng:testng:6.9.6")
        testCompile group: 'junit', name: 'junit', version: '4.11'
        testCompile('org.springframework.boot:spring-boot-starter-test')

        //vaadin
        compile('com.vaadin:vaadin-server:7.5.5')
        compile('com.vaadin:vaadin-themes:7.5.5')
        compile('com.vaadin:vaadin-client-compiler:7.5.5')
        compile 'com.google.guava:guava:18.0'
        compile fileTree(dir: 'C:\\selfservice\\lib', include: '*.jar')
        compile 'com.google.code.gson:gson:2.3.1'
        compile 'javax.servlet.jsp:jsp-api:2.2'
        compile('org.vaadin.spring.addons:vaadin-spring-addon-mvp:0.0.7.RELEASE')
        //compile 'commons-beanutils:commons-beanutils:1.8.3'
        compile 'org.springframework.boot:spring-boot-starter-tomcat:1.3.3.RELEASE'
    }

    dependencyManagement {
        imports {
            mavenBom "com.vaadin:vaadin-bom:7.5.5"
        }
    }


}

project(':analytique-vaadin') {
    apply plugin: 'war'
    dependencies {
        compile project(':analytique-service')
    }

    sourceSets {
        main {
            resources {
                srcDirs = ["src/main/resources"]

            }
        }
    }
}


project(':analytique-service') {

}

project(':deployable') {
    dependencies {
        compile project(':analytique-service')
        compile project(':analytique-vaadin')
        project(':analytique-vaadin').sourceSets.main.output
    }
}




String repo = version.endsWith('SNAPSHOT') ? 'ngi-build-snapshot' : 'ngi-build-release'

artifactory {
    contextUrl = "${artifactory_contextUrl}"
    publish {
        repository {
            contextUrl = "${artifactory_contextUrl}"
            repoKey = repo
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
        }
        defaults {
            publications ('mavenJava')
        }
    }
    resolve {
        repository {
            contextUrl = "${artifactory_contextUrl}"
            repoKey = 'libs-release' //The Artifactory (preferably virtual) repository key to resolve from
            username = "${artifactory_user}" //Optional resolver user name (leave out to use anonymous resolution)
            password = "${artifactory_password}" //The resolver password
            maven = true
        }
    }
}






